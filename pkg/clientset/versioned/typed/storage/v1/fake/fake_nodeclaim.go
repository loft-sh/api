// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/storage/v1"
	storagev1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/storage/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeNodeClaims implements NodeClaimInterface
type fakeNodeClaims struct {
	*gentype.FakeClientWithList[*v1.NodeClaim, *v1.NodeClaimList]
	Fake *FakeStorageV1
}

func newFakeNodeClaims(fake *FakeStorageV1, namespace string) storagev1.NodeClaimInterface {
	return &fakeNodeClaims{
		gentype.NewFakeClientWithList[*v1.NodeClaim, *v1.NodeClaimList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("nodeclaims"),
			v1.SchemeGroupVersion.WithKind("NodeClaim"),
			func() *v1.NodeClaim { return &v1.NodeClaim{} },
			func() *v1.NodeClaimList { return &v1.NodeClaimList{} },
			func(dst, src *v1.NodeClaimList) { dst.ListMeta = src.ListMeta },
			func(list *v1.NodeClaimList) []*v1.NodeClaim { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.NodeClaimList, items []*v1.NodeClaim) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
