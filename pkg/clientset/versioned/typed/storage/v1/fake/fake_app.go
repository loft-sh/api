// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/storage/v1"
	storagev1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/storage/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeApps implements AppInterface
type fakeApps struct {
	*gentype.FakeClientWithList[*v1.App, *v1.AppList]
	Fake *FakeStorageV1
}

func newFakeApps(fake *FakeStorageV1) storagev1.AppInterface {
	return &fakeApps{
		gentype.NewFakeClientWithList[*v1.App, *v1.AppList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("apps"),
			v1.SchemeGroupVersion.WithKind("App"),
			func() *v1.App { return &v1.App{} },
			func() *v1.AppList { return &v1.AppList{} },
			func(dst, src *v1.AppList) { dst.ListMeta = src.ListMeta },
			func(list *v1.AppList) []*v1.App { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.AppList, items []*v1.App) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
