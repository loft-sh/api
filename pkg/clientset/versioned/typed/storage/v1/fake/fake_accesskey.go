// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/storage/v1"
	storagev1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/storage/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeAccessKeys implements AccessKeyInterface
type fakeAccessKeys struct {
	*gentype.FakeClientWithList[*v1.AccessKey, *v1.AccessKeyList]
	Fake *FakeStorageV1
}

func newFakeAccessKeys(fake *FakeStorageV1) storagev1.AccessKeyInterface {
	return &fakeAccessKeys{
		gentype.NewFakeClientWithList[*v1.AccessKey, *v1.AccessKeyList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("accesskeys"),
			v1.SchemeGroupVersion.WithKind("AccessKey"),
			func() *v1.AccessKey { return &v1.AccessKey{} },
			func() *v1.AccessKeyList { return &v1.AccessKeyList{} },
			func(dst, src *v1.AccessKeyList) { dst.ListMeta = src.ListMeta },
			func(list *v1.AccessKeyList) []*v1.AccessKey { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.AccessKeyList, items []*v1.AccessKey) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
