// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/storage/v1"
	storagev1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/storage/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeNetworkPeers implements NetworkPeerInterface
type fakeNetworkPeers struct {
	*gentype.FakeClientWithList[*v1.NetworkPeer, *v1.NetworkPeerList]
	Fake *FakeStorageV1
}

func newFakeNetworkPeers(fake *FakeStorageV1) storagev1.NetworkPeerInterface {
	return &fakeNetworkPeers{
		gentype.NewFakeClientWithList[*v1.NetworkPeer, *v1.NetworkPeerList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("networkpeers"),
			v1.SchemeGroupVersion.WithKind("NetworkPeer"),
			func() *v1.NetworkPeer { return &v1.NetworkPeer{} },
			func() *v1.NetworkPeerList { return &v1.NetworkPeerList{} },
			func(dst, src *v1.NetworkPeerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.NetworkPeerList) []*v1.NetworkPeer { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.NetworkPeerList, items []*v1.NetworkPeer) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
