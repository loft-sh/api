// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/management/v1"
	managementv1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/management/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeConvertVirtualClusterConfigs implements ConvertVirtualClusterConfigInterface
type fakeConvertVirtualClusterConfigs struct {
	*gentype.FakeClientWithList[*v1.ConvertVirtualClusterConfig, *v1.ConvertVirtualClusterConfigList]
	Fake *FakeManagementV1
}

func newFakeConvertVirtualClusterConfigs(fake *FakeManagementV1) managementv1.ConvertVirtualClusterConfigInterface {
	return &fakeConvertVirtualClusterConfigs{
		gentype.NewFakeClientWithList[*v1.ConvertVirtualClusterConfig, *v1.ConvertVirtualClusterConfigList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("convertvirtualclusterconfigs"),
			v1.SchemeGroupVersion.WithKind("ConvertVirtualClusterConfig"),
			func() *v1.ConvertVirtualClusterConfig { return &v1.ConvertVirtualClusterConfig{} },
			func() *v1.ConvertVirtualClusterConfigList { return &v1.ConvertVirtualClusterConfigList{} },
			func(dst, src *v1.ConvertVirtualClusterConfigList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ConvertVirtualClusterConfigList) []*v1.ConvertVirtualClusterConfig {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.ConvertVirtualClusterConfigList, items []*v1.ConvertVirtualClusterConfig) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
