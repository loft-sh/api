// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/loft-sh/api/v4/pkg/apis/management/v1"
	managementv1 "github.com/loft-sh/api/v4/pkg/clientset/versioned/typed/management/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSpaceTemplates implements SpaceTemplateInterface
type fakeSpaceTemplates struct {
	*gentype.FakeClientWithList[*v1.SpaceTemplate, *v1.SpaceTemplateList]
	Fake *FakeManagementV1
}

func newFakeSpaceTemplates(fake *FakeManagementV1) managementv1.SpaceTemplateInterface {
	return &fakeSpaceTemplates{
		gentype.NewFakeClientWithList[*v1.SpaceTemplate, *v1.SpaceTemplateList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("spacetemplates"),
			v1.SchemeGroupVersion.WithKind("SpaceTemplate"),
			func() *v1.SpaceTemplate { return &v1.SpaceTemplate{} },
			func() *v1.SpaceTemplateList { return &v1.SpaceTemplateList{} },
			func(dst, src *v1.SpaceTemplateList) { dst.ListMeta = src.ListMeta },
			func(list *v1.SpaceTemplateList) []*v1.SpaceTemplate { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.SpaceTemplateList, items []*v1.SpaceTemplate) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
